name: "Documentation"
on:
  workflow_run:
    workflows: ["Release"]
    types:
      - completed

# Sets permissions of the GITHUB_TOKEN to allow pushing to gh-pages branch
permissions:
  contents: write

jobs:
  build-docs:
    if: github.event.workflow_run.conclusion == 'success'
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - uses: cachix/install-nix-action@v31
      with:
        github_access_token: ${{ secrets.GITHUB_TOKEN }}

    # Cache Mill dependencies
    - name: Cache Mill
      uses: actions/cache@v4
      with:
        path: |
          ~/.cache/mill
          ~/.cache/coursier
          out/
        key: ${{ runner.os }}-mill-${{ hashFiles('build.mill') }}
        restore-keys: |
          ${{ runner.os }}-mill-

    # Extract version from the latest tag
    - name: Get release version
      id: get_version
      run: |
        # Get the latest tag
        TAG=$(git describe --tags --abbrev=0)
        echo "VERSION=${TAG#v}" >> $GITHUB_OUTPUT
        echo "TAG=${TAG}" >> $GITHUB_OUTPUT

    # Generate documentation
    - name: Generate documentation
      run: |
        nix develop --command mill 'duck4s[3.7.0].docJar'

    # Deploy to gh-pages branch
    - name: Deploy to GitHub Pages
      run: |
        # Configure git
        git config --global user.name 'github-actions[bot]'
        git config --global user.email 'github-actions[bot]@users.noreply.github.com'

        # Create temporary directory
        TEMP_DIR=$(mktemp -d)
        cp -r out/duck4s/3.7.0/docJar.dest/javadoc/* "$TEMP_DIR/"

        # Check if gh-pages branch exists
        if git ls-remote --heads origin gh-pages | grep -q gh-pages; then
          # Fetch existing gh-pages branch
          git fetch origin gh-pages
          git checkout gh-pages
        else
          # Create new orphan branch
          git checkout --orphan gh-pages
        fi

        # Clean and copy new docs
        git rm -rf . || true
        git clean -fd
        cp -r "$TEMP_DIR"/* .
        touch .nojekyll

        # Commit and push
        git add -A
        git commit -m "Update documentation for release ${{ steps.get_version.outputs.TAG }}"
        git push origin gh-pages --force
